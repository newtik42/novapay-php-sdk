{% import "tool/legacy/extra.twig" as extra %}
{#

i18n = {label, help, placeholder}
input = {name, value, type, error}

value = {
            key_name:'name', 
            data:_value_,
            data_one:'', //використовується для шаблонів
        }

optionals = {required, autocomplete, labelBox}
    labelBox = col|ver //col - цифра, ver bool

#}

{% macro InputTextLangs(languages, input, i18n, optionals) %}

    {% if optionals.istable %}

        {% set tebId = "now"|date("H:i") %}

        <ul class="nav nav-tabs" role="tablist">
            {% for language_id, language in languages %}
                <li class="{{ loop.first ? 'active' }}">
                    <a href="#{{ tebId }}_language{{ language_id }}" 
                       data-toggle="tab">
                        <img src="language/{{ language.code }}/{{ language.code }}.png" 
                             title="{{ language.name }}" /> {{ language.name }}</a>
                </li>
            {% endfor %}
        </ul>
        <div class="tab-content">
            {% for language_id, language in languages %}
                <div role="tabpanel" class="tab-pane{{ loop.first ? ' active' }}" id="{{ tebId }}_language{{ language_id }}">

                    {{ _self.InputS("text", name|format(language_id), 
                    (), entry, help) }}
                </div>
            {% endfor %}
        </div>
    {% else %}
        {% for language_id,language in languages %}
            <div class="input-group">
                <span class="input-group-addon">
                    <img src="language/{{ language.code }}/{{ language.code }}.png" title="{{ language.name }}">
                </span>
                {% set input = input|merge({'name': input.name|format(language_id)}) %}
                
                {% if input.value.temp or values.key_name %}
                    {% set input = input|merge({'value': 
                        input.value.temp?input.value.temp|format(language_id):(
                            input.value.key_name?input.value.data[language_id][input.value.key_name]:input.value[language_id]
                    )} %}
                {% else %}
                {% endif %}
                
                {{ _self.InputS(input, i18n, optionals) }}
            </div>
        {% endfor %}  
    {% endif %}

{% endmacro %}

{% macro inputS(input, i18n, optionals) %}
    (values.temp?values.temp|format(language_id):(values.key_name?values.data[language_id][values.key_name]:values[language_id]))
    {% if input.type == 'textarea' %}
        {% if values.data %}
            <input type="{{ input.type }}" name="{{ input.name }}" 
                   value="{{ vinput.alue }}" placeholder="{{ i18n.placeholder }}" class="form-control" />
        {% else %}
            <input type="{{ input.type }}" name="{{ input.name }}" value="{{ vinput.alue }}" placeholder="{{ i18n.placeholder }}" class="form-control" />
        {% endif %}
    {% else %}
        {% if values.data %}
            <input type="{{ input.type }}" name="{{ input.name }}" 
                   value="{{ input.value }}" placeholder="{{ i18n.placeholder }}" class="form-control" />
        {% else %}
            <input type="{{ input.type }}" name="{{ input.name }}" value="{{ vinput.alue }}" placeholder="{{ i18n.placeholder }}" class="form-control" />
        {% endif %}
    {% endif %}
{% endmacro %}

